@model List<Entities.ViewModel.SectionVM>

@{
    Layout = "_LayoutOrder";
    ViewData["Title"] = "Table View";

    var totalwaitingList = Model.Sum(x => x.WaitingList);
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pizza Shop</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
    <script src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
</head>

<body style="background-color: rgb(245,245,245);">
    <div style="padding-top: 100px; padding-left: 50px; padding-right: 50px;">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div>
                    <div class="fs-2 fw-bold webybtn mb-3">Waiting List</div>
                </div>
                <div>
                    <button type="button" class="btn ms-4 waitingtokenmodal"
                        style=" border-color: rgba(0, 102, 167, 1); color: rgba(0, 102, 167, 1);">
                        + Waiting Token
                    </button>
                </div>
            </div>
        </div>

        <!-- Bootstrap Tabs -->
        <ul class="nav nav-tabss border-0 bg-white p-3 pt-2 pb-0 rounded-3" id="categoryTabs">
            <li class="nav-item">
                <a class="nav-link active text-nav-color border-bottom border-primary fs-5 fw-bold" data-category="0"
                    aria-selected="true" onclick="showWaitinList(0)">
                    All <span class="rounded-circle px-2 bg-secondary-subtle text-white">@totalwaitingList</span>
                </a>
            </li>
            @foreach (var sections in Model)
            {
                <li class="nav-item">
                    <a class="nav-link categoryBtn text-nav-color fs-5 fw-bold" data-category="@sections.SectionId"
                        aria-selected="false" onclick="showWaitinList(@sections.SectionId)">@sections.SectionName
                        <span class="rounded-circle px-2 bg-secondary-subtle  text-white">@sections.WaitingList</span>
                    </a>
                </li>
            }
        </ul>

        <!-- Placeholder for Partial View -->
        <div class="category-content bg-white" id="kotcard">

        </div>
        <div id="waitingtokendetailmodal" class="modal fade" data-backdrop="true">
            <div class="modal-dialog modal-dialog-centered w-xl">
                <div class="modal-content h-100 no-radius">
                    <div class="d-flex justify-content-between align-items-center p-3">
                        <div class="modal-title fw-bold fs-4 text-secondary text-md">Waiting Token Details</div>
                        <button class="close fs-2" data-bs-dismiss="modal">&times;</button>
                    </div>

                    <form class="savewaitingTokenDeatails">
                        <div class="row d-flex justify-space-between ps-3 waitingtokenDeatils">
                            <div class="row">
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="emailCust" name="email"
                                            placeholder="Email">

                                        <label for="floatingInput" class="text-secondary">Email*</label>
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="name" name="Name" placeholder="Name">
                                        <label for="floatingInput" class="text-secondary">Name*</label>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="phone" name="Phone"
                                            placeholder="Mobile Number">
                                        <label for="floatingInput" class="text-secondary">Mobile Number*</label>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="noOfPerson" name="noOfPerson"
                                            placeholder="No Of Person" value="0">
                                        <label for="floatingInput" class="text-secondary">No. Of Person(s)*</label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-floating"> <select class="form-select" id="sectionselectdrpdown" asp-items="ViewBag.Sections" 
                                            id="sectionId" name="SectionId" aria-label="Floating label select example">
                                            <option value="" selected>Select a Sections</option>
                                        </select>
                                        <label for="floatingSelect">Section*</label>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary savewaitingtoken px-4">Save</button>
                            <button type="button" class="btn px-4" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>





    </div>



</body>

<script>
    let sectionId = 0;
    let waitingId = 0;
    let tableId = 0;
    $(document).ready(function () {
        // Show the initial category content
        showWaitinList(0);
        $(".card-container").click(function () {
            $("#kotmodal").modal("show");
        });

        $(document).on('click', '.waitingtokenmodal', function (e) {
            e.preventDefault();
            console.log("Helooofvjoifj");
            $('#waitingtokendetailmodal').find('input, textarea, select').val('');
            $("#waitingtokendetailmodal").modal("show");
        });
        $(".savewaitingTokenDeatails").submit(function (e) {
                e.preventDefault();
                console.log("Submitting Customer Details form");
                var formData = $(this).serializeArray();
                var formDataobj = {};

                // Convert serialized array into an object
                $.each(formData, function (index, field) {
                    formDataobj[field.name] = field.value;
                });
                if(waitingId != 0){
                    formDataobj["WaitingId"] = waitingId;
                }
                @* formDataobj["SectionId"] = sectionId; *@

                var submissionData = JSON.stringify(formDataobj); // Final JSON string

                console.log("Sending data:", submissionData);

                console.log(formDataobj["NoOfPerson"]);

                $.ajax({
                    url: '/AccountManagerOrderApp/AddInWaitingList',
                    type: 'POST',
                    contentType: "application/json",
                    data: submissionData,
                    success: function (response) {
                        if(response.success == false)
                        {
                            toastr.warning("Customer has Already Waiting Token");
                        }
                        else
                        {
                            toastr.success('Customer Added Successfully!', "Success");
                            $("#waitingtokendetailmodal").modal("hide");
                            $.ajax({
                                url: '@Url.Action("GetWaitingListBySectionId", "AccountManagerOrderApp")',
                                type: 'GET',
                                data: { sectionId: sectionId },
                                success: function (data) {
                                    $('#kotcard').html(data);
                                    $('#kotcard').find('.category-content').show();  // Ensure newly added content is visible
                                    $('#kotcard').show();
                                },
                                error: function (xhr, status, error) {
                                    console.error("Error fetching category items:", error);
                                }
                            });
                        }
                        
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', xhr.responseText); // Log detailed error
                    }
                });

            });
        $(document).on('click', '.editIcon', function (e) {
            e.preventDefault();
            var waitingListId = $(this).data("id");
            waitingId = waitingListId;
            console.log(waitingListId);
            $.ajax({
                url: '@Url.Action("GetWaitingTokenById", "AccountManagerOrderApp")',
                type: 'GET',
                data: { waitingId: waitingListId },
                success: function (response) {
                    $("#waitingtokendetailmodal").modal("show");
                    console.log(response);
                    $("#emailCust").val(response.email);
                    $("#noOfPerson").val(response.noOfPerson);
                    $("#name").val(response.name);
                    $("#phone").val(response.phone);
                    sectionId = response.sectionId;
                    $("#sectionselectdrpdown").append(
                        '<option value="' + response.sectionId + '" selected>' + response.sectionName + '</option>'
                    );
                },
                error: function (xhr, status, error) {
                    console.error('Error:', xhr.responseText); // Log detailed error
                }
            });
        });
        $(document).on('click', '.deletebtn', function (e) {
            e.preventDefault();
            var waitingListId = $(this).data("id");
            waitingId = waitingListId;
            console.log(waitingListId);
            $("#waitingtokendetaildeletemodal").modal("show");
            $(".deletewaitingtokenbtn").click(function () {
                $.ajax({
                    url: '@Url.Action("DeleteWaitingToken", "AccountManagerOrderApp")',
                    type: 'POST',
                    data: { waitingId: waitingListId },
                    success: function (response) {
                        $("#waitingtokendetaildeletemodal").modal("hide");
                        toastr.success('Waiting Token Deleted Successfully!', "Success");
                        showWaitinList(sectionId);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', xhr.responseText); // Log detailed error
                    }
                });
            });
        });
        $(document).on('change', '#tableDropdown', function (e) {
            e.preventDefault();
            var selectedTableId = $(this).val();
            $('.assignBtn').attr('disabled', selectedTableId == 0); // Enable/disable button based on selection
            console.log(selectedTableId);
            tableId = selectedTableId;
        });
         $(document).on("blur", '#emailCust', function () {
                var email = $(this).val();
                console.log(email);
                $.ajax({
                    url: '@Url.Action("GetWaitingToken", "AccountManagerOrderApp")',
                    type: 'GET',
                    data: { email: email , sectionId: sectionId},
                    success: function (response) {
                        $(".waitingtokenDeatils").html(response);
                        $(".savewaitingtoken").prop("disabled", false);
                        console.log("Heloo!");
                    },
                    error: function (xhr, status, error) {
                       
                        console.error('Error fetching modifier groups:', error);
                    }
                });
            });
        $(document).on('click', '.assigntablebtn', function (e) {
            e.preventDefault();
            waitingId = $(this).data("id");
            console.log(waitingId);
            $("#assignwaitingtokendetailmodal").modal("show");
            $(document).on('click', '.assigntablefinalbtn', function (e) {
                e.preventDefault();
                $.ajax({
                    url: '@Url.Action("AssignTable", "AccountManagerOrderApp")',
                    type: 'POST',
                    data: { waitingId: waitingId, tableId: tableId },
                    success: function (response) {
                        $("#assignwaitingtokendetailmodal").modal("hide");
                        toastr.success('Table Assigned Successfully!', "Success");
                        showWaitinList(sectionId);
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', xhr.responseText); // Log detailed error
                    }
                });
            });
        });
    });
    function showWaitinList(SectionId) {

        $('#selectedCategoryId').val(SectionId);

        sectionId = SectionId;
        $(".category-content").hide();
        console.log(SectionId);


        $.ajax({
            url: '@Url.Action("GetWaitingListBySectionId", "AccountManagerOrderApp")',
            type: 'GET',
            data: { sectionId: SectionId },
            success: function (data) {
                $('#kotcard').html(data);

                $('#kotcard').find('.category-content').show();  // Ensure newly added content is visible
                $('#kotcard').show();

            },
            error: function (xhr, status, error) {
                console.error("Error fetching category items:", error);
            }
        });

        $(".nav-link").removeClass("text-primary border-bottom border-primary fw-bold").addClass("text-nav-color");

        // Add active style to selected
        $(`[data-category="${SectionId}"]`)
            .removeClass("text-nav-color")
            .addClass("text-primary border-bottom border-primary fw-bold");
    }


</script>

</html>